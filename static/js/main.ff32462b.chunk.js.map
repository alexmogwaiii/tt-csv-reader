{"version":3,"sources":["helpers/states.js","helpers/validate.js","components/CsvLoader/CsvLoader.jsx","helpers/titles.js","components/UsersTable/UsersTable.jsx","App.js","index.js"],"names":["STATES","name","abbreviation","validateAge","age","value","status","validateExperience","currentAge","experience","validateYearlyIncome","yearlyIncome","Math","round","validateLicenseStates","licenseStates","invalidStateName","stateNames","split","map","userState","length","find","state","includes","undefined","stn","join","validateDate","dateString","currentDate","Date","matchFormat","format","date","day","getDate","month","getMonth","year","getFullYear","replace","toString","padStart","toFormat","validatePhone","phone","phoneToString","match","validateChildren","hasChildren","validateLicense","license","validateEmail","email","emailToLowerCase","toLowerCase","test","CsvLoader","setUsers","setErrorStatus","buttonRef","useRef","handleOpenDialog","e","current","open","className","ref","onFileLoad","data","file","slice","preparedUsers","user","index","expirationDate","licenseNumber","id","validateUsers","some","fullName","onError","err","inputElem","reason","console","log","noClick","noDrag","onRemoveFile","config","header","transform","v","trim","dynamicTyping","delimiter","transformHeader","h","charAt","type","onClick","TITLES","UsersTable","users","findDuplicates","currentUser","duplicate","title","classnames","table__column","App","useState","notCorrectFormat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAaA,EAAS,CACpB,CACEC,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,uBACNC,aAAc,MAEhB,CACED,KAAM,iCACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,mBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,eACNC,aAAc,MAEhB,CACED,KAAM,2BACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEh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","file":"static/js/main.ff32462b.chunk.js","sourcesContent":["export const STATES = [\n  {\n    name: 'Alabama',\n    abbreviation: 'AL',\n  },\n  {\n    name: 'Alaska',\n    abbreviation: 'AK',\n  },\n  {\n    name: 'American Samoa',\n    abbreviation: 'AS',\n  },\n  {\n    name: 'Arizona',\n    abbreviation: 'AZ',\n  },\n  {\n    name: 'Arkansas',\n    abbreviation: 'AR',\n  },\n  {\n    name: 'California',\n    abbreviation: 'CA',\n  },\n  {\n    name: 'Colorado',\n    abbreviation: 'CO',\n  },\n  {\n    name: 'Connecticut',\n    abbreviation: 'CT',\n  },\n  {\n    name: 'Delaware',\n    abbreviation: 'DE',\n  },\n  {\n    name: 'District Of Columbia',\n    abbreviation: 'DC',\n  },\n  {\n    name: 'Federated States Of Micronesia',\n    abbreviation: 'FM',\n  },\n  {\n    name: 'Florida',\n    abbreviation: 'FL',\n  },\n  {\n    name: 'Georgia',\n    abbreviation: 'GA',\n  },\n  {\n    name: 'Guam',\n    abbreviation: 'GU',\n  },\n  {\n    name: 'Hawaii',\n    abbreviation: 'HI',\n  },\n  {\n    name: 'Idaho',\n    abbreviation: 'ID',\n  },\n  {\n    name: 'Illinois',\n    abbreviation: 'IL',\n  },\n  {\n    name: 'Indiana',\n    abbreviation: 'IN',\n  },\n  {\n    name: 'Iowa',\n    abbreviation: 'IA',\n  },\n  {\n    name: 'Kansas',\n    abbreviation: 'KS',\n  },\n  {\n    name: 'Kentucky',\n    abbreviation: 'KY',\n  },\n  {\n    name: 'Louisiana',\n    abbreviation: 'LA',\n  },\n  {\n    name: 'Maine',\n    abbreviation: 'ME',\n  },\n  {\n    name: 'Marshall Islands',\n    abbreviation: 'MH',\n  },\n  {\n    name: 'Maryland',\n    abbreviation: 'MD',\n  },\n  {\n    name: 'Massachusetts',\n    abbreviation: 'MA',\n  },\n  {\n    name: 'Michigan',\n    abbreviation: 'MI',\n  },\n  {\n    name: 'Minnesota',\n    abbreviation: 'MN',\n  },\n  {\n    name: 'Mississippi',\n    abbreviation: 'MS',\n  },\n  {\n    name: 'Missouri',\n    abbreviation: 'MO',\n  },\n  {\n    name: 'Montana',\n    abbreviation: 'MT',\n  },\n  {\n    name: 'Nebraska',\n    abbreviation: 'NE',\n  },\n  {\n    name: 'Nevada',\n    abbreviation: 'NV',\n  },\n  {\n    name: 'New Hampshire',\n    abbreviation: 'NH',\n  },\n  {\n    name: 'New Jersey',\n    abbreviation: 'NJ',\n  },\n  {\n    name: 'New Mexico',\n    abbreviation: 'NM',\n  },\n  {\n    name: 'New York',\n    abbreviation: 'NY',\n  },\n  {\n    name: 'North Carolina',\n    abbreviation: 'NC',\n  },\n  {\n    name: 'North Dakota',\n    abbreviation: 'ND',\n  },\n  {\n    name: 'Northern Mariana Islands',\n    abbreviation: 'MP',\n  },\n  {\n    name: 'Ohio',\n    abbreviation: 'OH',\n  },\n  {\n    name: 'Oklahoma',\n    abbreviation: 'OK',\n  },\n  {\n    name: 'Oregon',\n    abbreviation: 'OR',\n  },\n  {\n    name: 'Palau',\n    abbreviation: 'PW',\n  },\n  {\n    name: 'Pennsylvania',\n    abbreviation: 'PA',\n  },\n  {\n    name: 'Puerto Rico',\n    abbreviation: 'PR',\n  },\n  {\n    name: 'Rhode Island',\n    abbreviation: 'RI',\n  },\n  {\n    name: 'South Carolina',\n    abbreviation: 'SC',\n  },\n  {\n    name: 'South Dakota',\n    abbreviation: 'SD',\n  },\n  {\n    name: 'Tennessee',\n    abbreviation: 'TN',\n  },\n  {\n    name: 'Texas',\n    abbreviation: 'TX',\n  },\n  {\n    name: 'Utah',\n    abbreviation: 'UT',\n  },\n  {\n    name: 'Vermont',\n    abbreviation: 'VT',\n  },\n  {\n    name: 'Virgin Islands',\n    abbreviation: 'VI',\n  },\n  {\n    name: 'Virginia',\n    abbreviation: 'VA',\n  },\n  {\n    name: 'Washington',\n    abbreviation: 'WA',\n  },\n  {\n    name: 'West Virginia',\n    abbreviation: 'WV',\n  },\n  {\n    name: 'Wisconsin',\n    abbreviation: 'WI',\n  },\n  {\n    name: 'Wyoming',\n    abbreviation: 'WY',\n  },\n];\n","import { STATES } from './states';\n\nexport const validateUsers = (data) => {\n  const validatedUsers = data.map((user, index) => ({\n    ...user.data,\n    age: validateAge(user.data.age),\n    experience: validateExperience(user.data.age, user.data.experience),\n    yearlyIncome: validateYearlyIncome(user.data.yearlyIncome),\n    licenseStates: validateLicenseStates(user.data.licenseStates),\n    expirationDate: validateDate(user.data.expirationDate),\n    phone: validatePhone(user.data.phone),\n    hasChildren: validateChildren(user.data.hasChildren),\n    licenseNumber: validateLicense(user.data.licenseNumber),\n    email: validateEmail(user.data.email),\n    id: index + 1,\n  }));\n\n  return validatedUsers;\n};\n\nconst validateAge = age => ({\n  value: age,\n  status: age >= 21,\n});\n\nconst validateExperience = (currentAge, experience) => ({\n  value: experience,\n  status: experience >= 0 && experience <= currentAge,\n});\n\nconst validateYearlyIncome = yearlyIncome => ({\n  value: Math.round(yearlyIncome * 100) / 100,\n  status: yearlyIncome < 1000000,\n});\n\nconst validateLicenseStates = (licenseStates) => {\n  const invalidStateName = {\n    value: licenseStates,\n    status: false,\n  };\n\n  if (!licenseStates) {\n    return invalidStateName;\n  }\n\n  const baseStatesArray = licenseStates.split(' | ');\n\n  const stateNames = baseStatesArray.map((userState) => {\n    if (userState.length > 2) {\n      return STATES.find(state => (\n        state.name === userState\n      ));\n    }\n\n    return STATES.find(state => (\n      state.abbreviation === userState\n    ));\n  });\n\n  if (stateNames.includes(undefined)) {\n    return invalidStateName;\n  }\n\n  return {\n    value: stateNames.map(stn => stn.abbreviation).join(', '),\n    status: true,\n  };\n};\n\nconst validateDate = (dateString) => {\n  let status = true;\n  const currentDate = new Date();\n  const userDate = new Date(dateString);\n  const firstFormat = 'YYYY-MM-DD';\n  const secondFormat = 'MM/DD/YYYY';\n\n  if (userDate < currentDate) {\n    status = false;\n  }\n\n  if (!matchFormat(dateString, firstFormat)\n    && !matchFormat(dateString, secondFormat)) {\n    status = false;\n  }\n\n  return {\n    value: dateString,\n    status,\n  };\n};\n\nfunction toFormat(date, format) {\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  return format\n    .replace('DD', day.toString().padStart(2, '0'))\n    .replace('MM', month.toString().padStart(2, '0'))\n    .replace('YYYY', year);\n}\n\nfunction matchFormat(dateString, format) {\n  return toFormat(new Date(dateString), format) === dateString;\n}\n\nconst validatePhone = (phone) => {\n  const phoneToString = `${phone}`;\n\n  if (!phone) {\n    return {\n      value: phone,\n      status: false,\n    };\n  }\n\n  const match = phoneToString\n    .match(/^([+]{0,1})?([0-9]{0,10})?(\\+1[0-9]{10})?$/);\n\n  return {\n    value: phoneToString,\n    status: !!match,\n  };\n};\n\nconst validateChildren = (hasChildren) => {\n  if (typeof (hasChildren) === 'boolean' || hasChildren === null) {\n    return {\n      value: hasChildren ? 'TRUE' : 'FALSE',\n      status: true,\n    };\n  }\n\n  return {\n    value: hasChildren,\n    status: false,\n  };\n};\n\nconst validateLicense = (license) => {\n  const match = license.match(/[\\w\\W]{1,6}/g);\n\n  return {\n    value: license,\n    status: !!(!!match && license.length === 6),\n  };\n};\n\nconst validateEmail = (email) => {\n  if (!email) {\n    return {\n      value: email,\n      status: false,\n    };\n  }\n\n  const emailToLowerCase = email.toLowerCase();\n\n  const re = /\\S+@\\S+\\.\\S+/;\n\n  return {\n    value: emailToLowerCase,\n    status: re.test(emailToLowerCase),\n  };\n};\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSVReader } from 'react-papaparse';\n\nimport { validateUsers } from '../../helpers/validate';\n\nexport const CsvLoader = ({ setUsers, setErrorStatus }) => {\n  const buttonRef = useRef();\n\n  const handleOpenDialog = (e) => {\n    if (buttonRef.current) {\n      setErrorStatus(false);\n      buttonRef.current.open(e);\n    }\n  };\n\n  const checkForErrors = users => users.some(user => (\n    !user.fullName || !user.email.value || !user.phone.value\n  ));\n\n  const handleFileLoad = (data, file) => {\n    if (file.name.slice(-3) !== 'csv') {\n      setErrorStatus(true);\n\n      return;\n    }\n\n    const preparedUsers = validateUsers(data);\n\n    const checkStatus = checkForErrors(preparedUsers);\n\n    if (checkStatus) {\n      setErrorStatus(true);\n\n      return;\n    }\n\n    setUsers(preparedUsers);\n  };\n\n  const handleError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <div className=\"csv-uploader\">\n      <CSVReader\n        ref={buttonRef}\n        onFileLoad={handleFileLoad}\n        onError={handleError}\n        noClick\n        noDrag\n        onRemoveFile={handleOnRemoveFile}\n        config={{\n          header: true,\n          transform: v => v.trim(),\n          dynamicTyping: true,\n          delimiter: ',',\n          transformHeader: h => (\n            h.charAt(0).toLowerCase() + h.slice(1).replace(/\\s/g, '')\n          ),\n        }}\n      >\n        {({ file }) => (\n          <div className=\"csv-uploader__button-wrap\">\n            <button\n              type=\"button\"\n              onClick={handleOpenDialog}\n              className=\"csv-uploader__button\"\n            >\n              Import users\n            </button>\n          </div>\n        )}\n      </CSVReader>\n    </div>\n  );\n};\n\nCsvLoader.propTypes = {\n  setUsers: PropTypes.func.isRequired,\n  setErrorStatus: PropTypes.func.isRequired,\n};\n","// Titles for users table\n\nexport const TITLES = [\n  'ID',\n  'Full Name',\n  'Phone',\n  'Email',\n  'Age',\n  'Experience',\n  'Yearly Income',\n  'Has children',\n  'License states',\n  'Expiration date',\n  'License number',\n  'Duplicate with',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { TITLES } from '../../helpers/titles';\n\nexport const UsersTable = ({ users }) => {\n  const findDuplicates = (currentUser) => {\n    const duplicate = users.find((user) => {\n      if ((user.email.value === currentUser.email.value\n        || user.phone.value === currentUser.phone.value)\n        && user !== currentUser) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!duplicate) {\n      return false;\n    }\n\n    return duplicate.id;\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <table className=\"table\">\n        <thead>\n          <tr className=\"table__header-row\">\n            {TITLES.map(title => (\n              <th key={title} className=\"table__header-column\">\n                {title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {users.map(user => (\n            <tr key={user.id} className=\"table__row\">\n              <td className=\"table__column\">\n                {user.id}\n              </td>\n              <td className=\"table__column\">\n                {user.fullName}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.phone.status,\n                })}\n              >\n                {user.phone.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.email.status,\n                })}\n              >\n                {user.email.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.age.status,\n                })}\n              >\n                {user.age.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.experience.status,\n                })}\n              >\n                {user.experience.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.yearlyIncome.status,\n                })}\n              >\n                {user.yearlyIncome.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.hasChildren.status,\n                })}\n              >\n                {user.hasChildren.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.licenseStates.status,\n                })}\n              >\n                {user.licenseStates.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.expirationDate.status,\n                })}\n              >\n                {user.expirationDate.value}\n              </td>\n              <td\n                className={classnames({\n                  table__column: true,\n                  'table__column--invalid': !user.licenseNumber.status,\n                })}\n              >\n                {user.licenseNumber.value}\n              </td>\n              <td className=\"table__column\">\n                {findDuplicates(user)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nUsersTable.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    fullName: PropTypes.string,\n    phone: PropTypes.shape({\n      value: PropTypes.string,\n      status: PropTypes.bool,\n    }).isRequired,\n    email: PropTypes.shape({\n      value: PropTypes.string,\n      status: PropTypes.bool,\n    }).isRequired,\n    age: PropTypes.shape({\n      value: PropTypes.number,\n      status: PropTypes.bool,\n    }).isRequired,\n    experience: PropTypes.shape({\n      value: PropTypes.number,\n      status: PropTypes.bool,\n    }).isRequired,\n    yearlyIncome: PropTypes.shape({\n      value: PropTypes.number,\n      status: PropTypes.bool,\n    }).isRequired,\n    hasChildren: PropTypes.shape({\n      value: PropTypes.string,\n      status: PropTypes.bool,\n    }).isRequired,\n    licenseStates: PropTypes.shape({\n      value: PropTypes.string,\n      status: PropTypes.bool,\n    }).isRequired,\n    expirationDate: PropTypes.shape({\n      value: PropTypes.string,\n      status: PropTypes.bool,\n    }).isRequired,\n    licenseNumber: PropTypes.shape({\n      value: PropTypes.string,\n      status: PropTypes.bool,\n    }).isRequired,\n  })).isRequired,\n};\n","import React, { useState } from 'react';\nimport { CsvLoader } from './components/CsvLoader';\nimport { UsersTable } from './components/UsersTable';\nimport './App.scss';\n\nfunction App() {\n  const [notCorrectFormat, setErrorStatus] = useState(false);\n  const [users, setUsers] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"title\">Radency</h1>\n\n        <CsvLoader\n          setUsers={setUsers}\n          setErrorStatus={setErrorStatus}\n        />\n\n        {users && <UsersTable users={users} />}\n\n        {notCorrectFormat\n          && (\n            <div className=\"invalid-format\">\n              File format is not correct\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}